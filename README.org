#+Title: Musfälla API
#+AUTHOR: Simon Ericsson
#+EMAIL: simon@krlsg.se

#+DESCRIPTION: Documentation for the Musfälla API
#+LANGUAGE: en

#+OPTIONS: ^:{}
#+OPTIONS: toc:3

An API for use by our smart rat trap. Source code availabe at [[https://github.com/Simsva/abb-musfalla-api][GitHub]]. Documentation availabe at GitHub and at [[https://api.simsva.se/musfalla_docs.html][simsva.se]].

See [[https://github.com/Simsva/abb-musfalla-api/blob/master/nginx_example.conf][nginx_example.conf]] for information on running the API.

* Basic information
** Path arguments
Arguments provided at the end of the API URL separated by slashes.

/Example/: ~.../list/arg1/arg2~, where ~arg1~ and ~arg2~ are path arguments.

** Query arguments
Arguments provided using the query string at the end of the URL.

/Example/: ~.../entries?fields=name,description&limit=50~, where ~fields = name,description~ and ~limit = 50~ are query arguments.

** POST/PATCH arguments
All POST and PATCH arguments are parsed as "query strings" by default:

/Example/: ~arg1=1&arg2=true~

The ~Content-Type~ header can change this behaviour. Currently supported formats are ~application/x-www-form-urlencoded~ and ~application/json~.

* TODO Planned [0/0] [100%]

* API Usage
*Base URL*: [[https://api.simsva.se/musfalla/]] (Or another URL pointed to the same PHP script provided in the repository)
API paths are appended at the end of the *Base URL*.

** Paths
*** GET/POST/PATCH dump
Dumps request data.

Only used for testing.

*** POST authenticate
Generates an authorization token for an account with the provided credentials.

Every token is valid for 24 hours, or until the next password change.

**** POST arguments:
- *email* (/required/)

  E-mail of the account.

- *password* (/required/)

  Password of the account.

**** Status codes:
- ~400~ The required arguments are not passed.
- ~401~ The password provided is wrong.
- ~404~ No matching account found.

*** GET account
Gets account infomration for the account associated with the provided authorization token.

**** Headers:
- *Authorization* (/required/)

  An authorization token (very non-standard).

**** Query arguments:
- *fields*

  Comma separated list of which fields to return.

**** Status codes:
- ~401~ Not authenticated
- ~404~ Nothing returned

*** POST account
Registers a new account.

**** POST arguments:
- *email* (/required/)

  E-mail of the account.

- *password* (/required/)

  Password of the account.

- *name*

  Name of the account, defaults to an empty string.

*** PATCH account
Modifies the account associated with the provided authorization token.

Modifying password invalidates all active authorization tokens.

**** Headers:
- *Authorization* (/required/)

  An authorization token (very non-standard).

**** POST agruments:
- *name* (string)

  New account name.

- *email* (string)

  New account e-mail.

- *password* (string)

  New account password.

*** DELETE account
Deletes the account associated with the provided authorization token.

Also deletes owned devices and their events.

**** Headers:
- *Authorization* (/required/)

  An authorization token (very non-standard).

*** GET devices
Gets all devices associated with the provided authorization token.

**** Headers:
- *Authorization* (/required/)

  An authorization token (very non-standard).

**** Query arguments:
- *fields*

  Comma separated list of which fields to return.

**** Status codes:
- ~401~ Not authenticated
- ~404~ Nothing returned

*** POST devices
Add a device to the account associated with the provided authorization token.
Returns a secret identifying the device which can not be generated again.

**** Headers:
- *Authorization* (/required/)

  An authorization token (very non-standard).

**** POST arguments:
- *name*

  Name of the device, defaults to an empty string.

*** PATCH devices
Modify an existing device.

**** Headers:
- *Authorization* (/required/)

  An authorization token (very non-standard).

**** PATCH arguments:
- *id* (/required/)

  ID of the device to be modified.

- *name* (string)

  New name of the device.

**** Status codes:
- ~400~ Malformed request
- ~401~ Not authenticated
- ~403~ Not allowed to modify the specified device

*** DELETE devices
Delete a device.

**** Headers:
- *Authorization* (/required/)

  An authorization token (very non-standard).

**** Query arguments:
- *id* (/required/)

  ID of the device to be deleted.

**** Status codes:
- ~400~ Malformed request
- ~401~ Not authenticated
- ~403~ Not allowed to delete the specified device

*** GET events
Gets events for all devices associated with the provided authorization token.

**** Headers:
- *Authorization* (/required/)

  An authorization token (very non-standard).

**** Query arguments:
- *fields*

  Comma separated list of which fields to return.

- *reverse*

  If present, will sort events by ascending instead of descending time.

**** Status codes:
- ~401~ Not authenticated
- ~404~ Nothing returned

*** POST events
Adds an event from a device.

**** Headers:
- *Authorization* (/required/)

  Device secret (very non-standard).

**** POST arguments:
- *type*

  Type of event.

  Accepted values are ~close~ or ~open.~
